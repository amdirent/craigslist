#!/usr/bin/env ruby

p 'Starting posts qualifier'

require 'bundler'

Bundler.require(:default)

require_relative 'lib/datadog'

Datadog.emit_event("Qualifying unprocessed posts",
                   msg_title: '[Craigslist Scraper] Qualifier started',
                   priority: 'low',
                   tags: %w{ craigslist_scraper qualify_posts }
                  )

pg = PG.connect(host:     ENV['DATABASE_HOST'],
                port:     ENV.fetch('DATABASE_PORT', 5432).to_i,
                dbname:   ENV['DATABASE_NAME'],
                user:     ENV['DATABASE_USER'],
                password: ENV['DATABASE_PASS']
               )

keywords = %w{ ios
               android
               ruby
               rails
               python
               javascript
               app
               web
               application
               api
               rest
               programmer
               automate
               unix
               linux
               shell
               script
             }

keyword_query = keywords.join(' | ')

pg.exec_params(<<-SQL, [keyword_query])
                 UPDATE posts p
                 SET potential_lead = false
                 WHERE potential_lead IS NULL
                 AND NOT ((p.body_ts || p.title_ts) @@ to_tsquery('english', $1))
               SQL

p 'Qualifier finished'

at_exit do
  if $!
    # Looks like an error occurred...

    Datadog.emit_event($!.message,
                       msg_title: '[Craigslist Scraper] An error occurred during qualification',
                       alert_type: 'error',
                       tags: %w{ craigslist_scraper qualify_posts }
                      )
  else
    Datadog.emit_event("Posts processed and qualified",
                       msg_title: '[Craigslist Scraper] Qualifier finished',
                       alert_type: 'success',
                       tags: %w{ craigslist_scraper qualify_posts }
                      )
  end
end
